replicaCount: 1

image:
  repository: containerum/auth
  tag: v1.0.0
  pullPolicy: IfNotPresent
  secret:

service:
  externalIP:
  http:
    port: 1111
    targetPort: 1111
  grpc:
    port: 1112
    targetPort: 1112

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ## If kuberntes version < 1.10 use volume.beta.kubernetes.io/storage-class:$store-class-name
  annotations: {}
  accessMode: ReadWriteOnce
  mountPath: "/storage"
  size: 5Gi

env:
  global:
   LOG_MODE: text
   LOG_LEVEL: 4
   TOKENS: jwt
   JWT_SIGNING_METHOD: HS256
   HTTP_LISTENADDR: 0.0.0.0:1111
   GRPC_LISTENADDR: 0.0.0.0:1112
   ISSUER: containerum.com
   ACCESS_TOKEN_LIFETIME: 15m
   REFRESH_TOKEN_LIFETIME: 48h
   JWT_SIGNING_KEY_FILE: /keys/jwt.key
   JWT_VALIDATION_KEY_FILE: /keys/jwt.key
   STORAGE: buntdb
   BUNT_STORAGE_FILE: /storage/storage.db
   TRACER: zipkin
   ZIPKIN_COLLECTOR: nop
  local:
    JWT_KEY: null
