syntax = "proto3";

import "auth_types.proto";
import "google/protobuf/empty.proto";

option go_package = "authProto";

// The Auth API project is an OAuth authentication server that is used to authenticate users.
service Auth {
    rpc CreateToken (CreateTokenRequest) returns (CreateTokenResponse) {} // Makes access and refresh token for user, and save it In-Memory DB.
    rpc CheckToken (CheckTokenRequest) returns (CheckTokenResponse) {} // Checks JWT token, user ip and return user access data.
    rpc ExtendToken (ExtendTokenRequest) returns (ExtendTokenResponse) {} // Check refresh_token, user agent and fingerprint. If it's correct returns new extended access and refresh token. Old access and refresh token become inactive.
    rpc GetUserTokens (GetUserTokensRequest) returns (GetUserTokensResponse) {} // Returns all active User-Agent's, IP's and times. Filtered by user active refresh token.
    rpc DeleteToken (DeleteTokenRequest) returns (google.protobuf.Empty) {} // Delete user access and refresh token by token id.
    rpc DeleteUserTokens (DeleteUserTokensRequest) returns (google.protobuf.Empty) {} // Delete all user access and refresh tokens by user id.
    rpc AccessTokenByID (AccessTokenByIDRequest) returns (AccessTokenByIDResponse) {} // Get access token by id (reconstruct from stored refresh token)
}

//swagger:ignore
message CreateTokenRequest {
    string user_agent = 1;
    string fingerprint = 2;
    // @inject_tag: binding:"uuid"
    string user_id = 3;
    // @inject_tag: binding:"ip"
    string user_ip = 4;
    string user_role = 5;
    bool rw_access = 6;
    //ResourcesAccess access = 7;
    // @inject_tag: binding:"omitempty,uuid"
    //string part_token_id = 8;
}

// CreateTokenResponse contains access and refresh token.
//
// swagger:model
message CreateTokenResponse {
    string access_token = 1;
    string refresh_token = 2;
}

//swagger:ignore
message CheckTokenRequest {
    string access_token = 1;
    string user_agent = 2;
    string finger_print = 3;
    // @inject_tag: binding:"ip"
    string user_ip = 4;
}

//swagger:ignore
message CheckTokenResponse {
    //ResourcesAccess access = 1;
    // @inject_tag: binding:"uuid"
    string user_id = 2;
    string user_role = 3;
    // @inject_tag: binding:"uuid"
    string token_id = 4;
    // @inject_tag: binding:"omitempty,uuid"
    string part_token_id = 5;
}

//swagger:ignore
message ExtendTokenRequest {
    string refresh_token = 1;
    string fingerprint = 2;
}

// ExtendTokenResponse contains new access and refresh tokens
//
// swagger:model
message ExtendTokenResponse {
    string access_token = 1;
    string refresh_token = 2;
}

//swagger:ignore
message GetUserTokensRequest {
    // @inject_tag: binding:"uuid"
    string user_id = 1;
}

// GetUserTokensResponse contains user tokens
//
// swagger:model
message GetUserTokensResponse {
    repeated StoredTokenForUser tokens = 1;
}

//swagger:ignore
message DeleteTokenRequest {
    // @inject_tag: binding:"uuid"
    string token_id = 1;
    // @inject_tag: binding:"uuid"
    string user_id = 2;
}

//swagger:ignore
message DeleteUserTokensRequest {
    // @inject_tag: binding:"uuid"
    string user_id = 1;
}

//swagger:ignore
message AccessTokenByIDRequest {
    // @inject_tag: binding:"uuid"
    string token_id = 1;
    string user_role = 2;
}

// AccessTokenByIDResponse contains access token get by ID.
//
// swagger:model
message AccessTokenByIDResponse {
    string access_token = 1;
}