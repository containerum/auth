// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth_types.proto

package authProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// StoredToken is a representaion of token database record
//
// swagger:model
type StoredToken struct {
	// swagger:strfmt uuid
	// @inject_tag: binding:"uuid"
	TokenId     string `protobuf:"bytes,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty" binding:"uuid"`
	UserAgent   string `protobuf:"bytes,2,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	Platform    string `protobuf:"bytes,3,opt,name=platform" json:"platform,omitempty"`
	Fingerprint string `protobuf:"bytes,4,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// swagger:strfmt uuid
	// @inject_tag: binding:"uuid"
	UserId   string `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty" binding:"uuid"`
	UserRole string `protobuf:"bytes,6,opt,name=user_role,json=userRole" json:"user_role,omitempty"`
	// string user_namespace = 7;
	// string user_volume = 8;
	// bool rw_access = 9;
	// swagger:strfmt ip
	// @inject_tag: binding:"ip"
	UserIp string `protobuf:"bytes,10,opt,name=user_ip,json=userIp" json:"user_ip,omitempty" binding:"ip"`
	// swagger:strfmt uuid
	// @inject_tag: binding:"omitempty,uuid"
	// string part_token_id = 11;
	CreatedAt       *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt" json:"created_at,omitempty" binding:"omitempty,uuid"`
	LifeTime        *google_protobuf1.Duration `protobuf:"bytes,13,opt,name=life_time,json=lifeTime" json:"life_time,omitempty"`
	RawRefreshToken string                     `protobuf:"bytes,14,opt,name=raw_refresh_token,json=rawRefreshToken" json:"raw_refresh_token,omitempty"`
}

func (m *StoredToken) Reset()                    { *m = StoredToken{} }
func (m *StoredToken) String() string            { return proto.CompactTextString(m) }
func (*StoredToken) ProtoMessage()               {}
func (*StoredToken) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *StoredToken) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *StoredToken) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *StoredToken) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *StoredToken) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *StoredToken) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StoredToken) GetUserRole() string {
	if m != nil {
		return m.UserRole
	}
	return ""
}

func (m *StoredToken) GetUserIp() string {
	if m != nil {
		return m.UserIp
	}
	return ""
}

func (m *StoredToken) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *StoredToken) GetLifeTime() *google_protobuf1.Duration {
	if m != nil {
		return m.LifeTime
	}
	return nil
}

func (m *StoredToken) GetRawRefreshToken() string {
	if m != nil {
		return m.RawRefreshToken
	}
	return ""
}

// StoredTokenForUser is an information about token sent to user
//
// swagger:model
type StoredTokenForUser struct {
	// @inject_tag: binding:"uuid"
	// swagger:strfmt uuid
	TokenId   string `protobuf:"bytes,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty" binding:"uuid"`
	UserAgent string `protobuf:"bytes,2,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// @inject_tag: binding:"ip"
	// swagger:strfmt ip
	Ip        string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty" binding:"ip"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *StoredTokenForUser) Reset()                    { *m = StoredTokenForUser{} }
func (m *StoredTokenForUser) String() string            { return proto.CompactTextString(m) }
func (*StoredTokenForUser) ProtoMessage()               {}
func (*StoredTokenForUser) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *StoredTokenForUser) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *StoredTokenForUser) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *StoredTokenForUser) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *StoredTokenForUser) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*StoredToken)(nil), "StoredToken")
	proto.RegisterType((*StoredTokenForUser)(nil), "StoredTokenForUser")
}

func init() { proto.RegisterFile("auth_types.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x41, 0x4f, 0xdb, 0x40,
	0x10, 0x85, 0x15, 0xb7, 0x4d, 0xe2, 0x71, 0x9b, 0xb6, 0x7b, 0xe9, 0x26, 0x55, 0x4b, 0x94, 0x53,
	0xc4, 0xc1, 0x91, 0x40, 0x42, 0xe2, 0x18, 0x84, 0x90, 0x72, 0x43, 0x26, 0x5c, 0xb8, 0xac, 0x16,
	0x3c, 0x76, 0x56, 0x38, 0xde, 0xd5, 0x78, 0xad, 0x88, 0x03, 0xbf, 0x9a, 0x3f, 0x80, 0x76, 0xed,
	0x10, 0x0b, 0x8e, 0xdc, 0x3c, 0xef, 0xbd, 0x19, 0xfb, 0x7d, 0x32, 0xfc, 0x92, 0xb5, 0xdd, 0x08,
	0xfb, 0x64, 0xb0, 0x8a, 0x0d, 0x69, 0xab, 0x27, 0x47, 0xb9, 0xd6, 0x79, 0x81, 0x0b, 0x3f, 0xdd,
	0xd7, 0xd9, 0xc2, 0xaa, 0x2d, 0x56, 0x56, 0x6e, 0x4d, 0x1b, 0xf8, 0xff, 0x3e, 0x90, 0xd6, 0x24,
	0xad, 0xd2, 0x65, 0xe3, 0xcf, 0x5e, 0x02, 0x88, 0x6e, 0xac, 0x26, 0x4c, 0xd7, 0xfa, 0x11, 0x4b,
	0x36, 0x86, 0xa1, 0x75, 0x0f, 0x42, 0xa5, 0xbc, 0x37, 0xed, 0xcd, 0xc3, 0x64, 0xe0, 0xe7, 0x55,
	0xca, 0xfe, 0x01, 0xd4, 0x15, 0x92, 0x90, 0x39, 0x96, 0x96, 0x07, 0xde, 0x0c, 0x9d, 0xb2, 0x74,
	0x02, 0x9b, 0xc0, 0xd0, 0x14, 0xd2, 0x66, 0x9a, 0xb6, 0xfc, 0x8b, 0x37, 0xdf, 0x66, 0x36, 0x85,
	0x28, 0x53, 0x65, 0x8e, 0x64, 0x48, 0x95, 0x96, 0x7f, 0xf5, 0x76, 0x57, 0x62, 0x7f, 0x60, 0xe0,
	0x8f, 0xab, 0x94, 0x7f, 0xf3, 0x6e, 0xdf, 0x8d, 0xab, 0x94, 0xfd, 0x05, 0xff, 0x0e, 0x41, 0xba,
	0x40, 0xde, 0x6f, 0xee, 0x3a, 0x21, 0xd1, 0x05, 0x1e, 0xb6, 0x0c, 0x87, 0xce, 0x96, 0x61, 0xe7,
	0x00, 0x0f, 0x84, 0xd2, 0x62, 0x2a, 0xa4, 0xe5, 0xdf, 0xa7, 0xbd, 0x79, 0x74, 0x32, 0x89, 0x1b,
	0x16, 0xf1, 0x9e, 0x45, 0xbc, 0xde, 0xc3, 0x4a, 0xc2, 0x36, 0xbd, 0xb4, 0xec, 0x0c, 0xc2, 0x42,
	0x65, 0x28, 0x1c, 0x49, 0xfe, 0xc3, 0x6f, 0x8e, 0x3f, 0x6c, 0x5e, 0xb6, 0x14, 0x93, 0xa1, 0xcb,
	0xba, 0x3b, 0xec, 0x18, 0x7e, 0x93, 0xdc, 0x09, 0xc2, 0x8c, 0xb0, 0xda, 0x08, 0x4f, 0x8d, 0x8f,
	0xfc, 0x57, 0xfd, 0x24, 0xb9, 0x4b, 0x1a, 0xdd, 0x53, 0x9e, 0x3d, 0x03, 0xeb, 0x40, 0xbf, 0xd2,
	0x74, 0x5b, 0x21, 0x7d, 0x82, 0xfd, 0x08, 0x02, 0x65, 0x5a, 0xea, 0x81, 0x32, 0x2e, 0xde, 0xa9,
	0xdf, 0xe0, 0x3e, 0x54, 0xbc, 0x88, 0xee, 0x42, 0xf7, 0x27, 0x5d, 0xfb, 0x36, 0x7d, 0x5f, 0xea,
	0xf4, 0x35, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x7e, 0x10, 0x44, 0x5d, 0x02, 0x00, 0x00,
}
